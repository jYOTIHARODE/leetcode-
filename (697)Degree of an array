class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
        unordered_map<int,int> left,right,counts;
        for(int i=0;i<nums.size();i++){
            int num=nums[i];
            if(counts[num]==0)left[num]=i;
            right[num]=i;
            counts[num]++;
        }
        int degree=1;
        for(auto count:counts){
            degree=max(degree,count.second);
        }
        int shortestLength=INT_MAX;
            for(int num:nums){
            if(counts[num]==degree){
                shortestLength=min(shortestLength,right[num]-left[num]+1);
            }
        }
        return shortestLength;
    }
};
